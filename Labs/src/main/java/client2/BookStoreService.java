
package client2;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BookStoreService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BookStoreService {


    /**
     * 
     * @param arg0
     * @return
     *     returns client2.Book
     */
    @WebMethod(operationName = "GetBook")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetBook", targetNamespace = "http://services/", className = "client2.GetBook")
    @ResponseWrapper(localName = "GetBookResponse", targetNamespace = "http://services/", className = "client2.GetBookResponse")
    @Action(input = "http://services/BookStoreService/GetBookRequest", output = "http://services/BookStoreService/GetBookResponse")
    public Book getBook(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<client2.ReserveBookResponse>
     */
    @WebMethod(operationName = "ReserveBook")
    @RequestWrapper(localName = "ReserveBook", targetNamespace = "http://services/", className = "client2.ReserveBook")
    @ResponseWrapper(localName = "ReserveBookResponse", targetNamespace = "http://services/", className = "client2.ReserveBookResponse")
    public Response<ReserveBookResponse> reserveBookAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "ReserveBook")
    @RequestWrapper(localName = "ReserveBook", targetNamespace = "http://services/", className = "client2.ReserveBook")
    @ResponseWrapper(localName = "ReserveBookResponse", targetNamespace = "http://services/", className = "client2.ReserveBookResponse")
    public Future<?> reserveBookAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ReserveBookResponse> asyncHandler);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ReserveBook")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ReserveBook", targetNamespace = "http://services/", className = "client2.ReserveBook")
    @ResponseWrapper(localName = "ReserveBookResponse", targetNamespace = "http://services/", className = "client2.ReserveBookResponse")
    @Action(input = "http://services/BookStoreService/ReserveBookRequest", output = "http://services/BookStoreService/ReserveBookResponse")
    public int reserveBook(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ShippingBook")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ShippingBook", targetNamespace = "http://services/", className = "client2.ShippingBook")
    @ResponseWrapper(localName = "ShippingBookResponse", targetNamespace = "http://services/", className = "client2.ShippingBookResponse")
    @Action(input = "http://services/BookStoreService/ShippingBookRequest", output = "http://services/BookStoreService/ShippingBookResponse")
    public int shippingBook(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

}
